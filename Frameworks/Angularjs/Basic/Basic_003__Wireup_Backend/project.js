// modified from official sample/*    declare module where module name is 'project',    depends on (i.e., load after) other two modules 'ngRoute', 'firebase'*/angular.module('project', ['ngRoute', 'firebase'])/*    register a service    params:    'fbURL' the name of the service        then you can access the service via variable fbURL        i.e., the name will be used to create a variable    'https://angularjs-projects.firebaseio.com/' uri of the service        returns registered provider instance*/ .value('fbURL', 'https://angularjs-projects.firebaseio.com/')/*    Register a service factory, which will be called to return the service instance    get/add/delete operations        params:    'Projects' the name of this service factory        then you can access the service factory via variable Projects        i.e., the name will be used to create a variable    function (...) {...}  the $getFn function used to access service        $firebase: $firebase service provided by AngularFire        fbURL: the registered service above        returns registered provider instance*/.factory('Projects', function($firebase, fbURL) {  // create reference with fbURL  var projectsRef = new Firebase(fbURL);  // create and return firebase service with reference  return $firebase(projectsRef);})/*    Config $routeProvider        params: function the configFn method to register work which needs to be performed on module loading.    returns registered provider instance (I guess, not found in official document)    http://docs.angularjs.org/api/angular.Module#config*/.config(function($routeProvider) {  /* $routeProvider: service in module ngRoute      when(path, route): Adds a new route definition to the $route service.      otherwise(params): Sets route definition that will be used on                 route change when no other route definition is matched.    for more information please refer to    http://docs.angularjs.org/api/ngRoute.$routeProvider  */  $routeProvider    .when('/', {      controller:'ListCtrl',      templateUrl:'list.html'    })    /*        e.g., /edit/-JEsJft8i71IGre82KDR        -JEsJft8i71IGre82KDR will be assigned to projectId and        can be accessed with $routeParams.projectId within controller    */    .when('/edit/:projectId', {      controller:'EditCtrl',      templateUrl:'detail.html'    })    .when('/new', {      controller:'CreateCtrl',      templateUrl:'detail.html'    })    .otherwise({      redirectTo:'/'    });})/*    Register controller        params        ListCtrl: the name of this controller        function: the constructor of this controller            $scope: an object that refers to the application model                see http://docs.angularjs.org/guide/scope            Projects: service factory defined above*/.controller('ListCtrl', function($scope, Projects) {  console.log(Projects);  // get project list  $scope.projects = Projects;})/*    $location: service to access browser location        see http://docs.angularjs.org/api/ng.$location    $timeout: Angular's wrapper for window.setTimeout,        see http://docs.angularjs.org/api/ng.$timeout*/.controller('CreateCtrl', function($scope, $location, $timeout, Projects) {  // define save function for scope, called in detail.html  // project here is just an object and do not have $remove function  $scope.save = function() {    // add project into project list    Projects.$add($scope.project, function() { // callback after add operation      // change window location      $timeout(function() { $location.path('/'); });    });  };})/*    $routeParams: service allows you to retrieve the current set of route parameters.        see http://docs.angularjs.org/api/ngRoute.$routeParams*/.controller('EditCtrl',  function($scope, $location, $routeParams, $firebase, fbURL) {    // get project ($firebase service with project info)    var projectUrl = fbURL + $routeParams.projectId;	// project here is a firebase service and has $remove function    $scope.project = $firebase(new Firebase(projectUrl));     // declare destroy function, called in detail.html    $scope.destroy = function() {      // remove project      $scope.project.$remove();      // change window location      $location.path('/');    };    // define save function, called in detail.html    $scope.save = function() {      // save project      $scope.project.$save();      // change window location      $location.path('/');    };});